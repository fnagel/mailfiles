plugin.tx_mailfiles_pi1 {
	view {
		templateRootPaths.0 = EXT:mailfiles/Resources/Private/Templates/
		templateRootPaths.1 = {$plugin.tx_mailfiles_pi1.view.templateRootPath ?? $plugin.mailfiles.view.templateRootPath}

		partialRootPaths.0 = EXT:mailfiles/Resources/Private/Partials/
		partialRootPaths.1 = {$plugin.tx_mailfiles_pi1.view.partialRootPath ?? $plugin.mailfiles.view.partialRootPath}

		layoutRootPaths.0 = EXT:mailfiles/Resources/Private/Layouts/
		layoutRootPaths.1 = {$plugin.tx_mailfiles_pi1.view.layoutRootPath ?? $plugin.mailfiles.view.layoutRootPath}
	}
	mvc {
		callDefaultActionIfActionCantBeResolved = 1
	}

	settings {
		# By using "useStdWrap" it is possible to call the full range of stdWrap on any setting:
		#
		# useStdWrap := addToList(mailTo.email,mailTo.name)
		# mailTo {
		# 	email = TEXT
		# 	email.data = TSFE:fe_user|user|email
		# 	name = TEXT
		# 	name.data = TSFE:fe_user|user|username
		# }

        # When using the core fluid mail functionality, you will need to configure the MAIL.templateRootPaths
        # configuration in order to override the template and partial paths. See TYPO3 docs:
        # https://docs.typo3.org/m/typo3/reference-coreapi/main/en-us/ApiOverview/Mail/Index.html#send-email-with-fluidemail
        useTypoFluidMail = 1

		# Configure email template file (txt and / or html), controller name (and therefor subdirectory) is "Email"
		mailTemplate = Email.html

        # Set mail to address or allow adding an email address in frontend
        showMailToField = 0
		mailTo {
			email = mail@test.dev
			name =
		}

		mailFrom {
			email = no-reply@domain.dev
			name =
		}

		mailSubjectDefault = New files uploaded

		# PluploadFe instance
		pluploadfe < plugin.tx_pluploadfe_pi1
		pluploadfe {
            templateFile = {$plugin.tx_mailfiles_pi1.view.pluploadfeTemplateFile ?? $plugin.mailfiles.pluploadfe.template}
		}
	}
}
